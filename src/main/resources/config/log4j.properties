#OFF,FATAL,ERROR,WARN,INFO,DEBUG,ALL
log4j.rootCategory=DEBUG, R , dailyFile

#org.apache.log4j.ConsoleAppender（控制台），
#org.apache.log4j.FileAppender（文件），
#org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），
#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
#指日志信息输出到哪个地方,有以上5种
log4j.appender.R=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.R.encoding=GBK
log4j.appender.R.File=/home/sunjf/workspace/logs/info/log.log4j
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=[bmk]%d %c %x %-5p - %m [%l] %n

log4j.appender.dailyFile=org.apache.log4j.DailyRollingFileAppender
#指定日志信息的最低输出级别，默认为DEBUG。
log4j.appender.dailyFile.Threshold=ERROR
#表示所有消息都会被立即输出，设为false则不输出，默认值是true。
log4j.appender.dailyFile.ImmediateFlush=true
#true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true。
log4j.appender.dailyFile.Append=true
#log4j.appender.dailyFile.encoding=GBK
#指定消息输出到logging.log4j文件中
log4j.appender.dailyFile.File=/home/sunjf/workspace/logs/error/log.log4j
#每周滚动一次日志文件，即每周产生一个新的日志文件,也可以指定按月yyyy-MM、天yyyy-MM-dd、时yyyy-MM-dd-HH、分yyyy-MM-dd-HH-mm、每天两次yyyy-MM-dd-a等来滚动日志文件
log4j.appender.dailyFile.DatePattern='.'yyyy-ww
#设定以怎样的格式显示消息
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#%r 输出自应用启动到输出该log信息耗费的毫秒数
#%c 输出所属的类目，通常就是所在类的全名
#%t 输出产生该日志事件的线程名
#%n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
#%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)
log4j.appender.dailyFile.layout=org.apache.log4j.PatternLayout
log4j.appender.dailyFile.layout.ConversionPattern=[test2]%d %c %x %-5p - %m [%l] %n


log4j.logger.org.springframework=ERROR
log4j.logger.org.apache.shiro=ERROR
log4j.logger.net.sf=ERROR
log4j.logger.org.quartz=ERROR
log4j.logger.org=ERROR
log4j.logger.druid.sql=ERROR
#log4j.logger.druid.sql.DataSource=warn, stdout
#log4j.logger.druid.sql.Connection=warn, stdout
#log4j.logger.druid.sql.Statement=warn, stdout
#log4j.logger.druid.sql.ResultSet=warn, stdout

log4j.logger.org.hibernate=ERROR